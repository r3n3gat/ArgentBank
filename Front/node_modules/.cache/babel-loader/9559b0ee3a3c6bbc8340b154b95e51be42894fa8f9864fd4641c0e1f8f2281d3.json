{"ast":null,"code":"// authActions.js\nexport const login = userData => {\n  return async dispatch => {\n    try {\n      const response = await fetch('http://localhost:3001/api/v1/user/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      console.log('réponse http', response);\n      if (response.status === 200) {\n        const data = await response.json();\n        dispatch({\n          type: 'LOGIN',\n          payload: {\n            token: data.body.token\n          }\n        });\n      } else {\n        // Handle errors\n        dispatch({\n          type: 'AUTH_ERROR',\n          payload: {\n            error: 'email ou mot de passe non valides'\n          }\n        });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};","map":{"version":3,"names":["login","userData","dispatch","response","fetch","method","headers","body","JSON","stringify","console","log","status","data","json","type","payload","token","error"],"sources":["C:/Users/stevi/Desktop/OPENCLASSROOMS/PROJETS/Projet11/ArgentBank/Front/src/redux/actions/login.js"],"sourcesContent":["// authActions.js\r\nexport const login = (userData) => {\r\n    return async (dispatch) => { \r\n      try {\r\n        const response = await fetch('http://localhost:3001/api/v1/user/login', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(userData)\r\n        });\r\n        console.log('réponse http', response);\r\n  \r\n        if (response.status === 200) {\r\n          const data = await response.json();\r\n          dispatch({\r\n            type: 'LOGIN',\r\n            payload: {\r\n              token: data.body.token,\r\n            }\r\n          });\r\n        } else {\r\n          // Handle errors\r\n          dispatch({\r\n            type: 'AUTH_ERROR',\r\n            payload: {\r\n              error: 'email ou mot de passe non valides',\r\n            }\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n  };"],"mappings":"AAAA;AACA,OAAO,MAAMA,KAAK,GAAIC,QAAQ,IAAK;EAC/B,OAAO,MAAOC,QAAQ,IAAK;IACzB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;QACtEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,QAAQ;MAC/B,CAAC,CAAC;MACFS,OAAO,CAACC,GAAG,CAAC,cAAc,EAAER,QAAQ,CAAC;MAErC,IAAIA,QAAQ,CAACS,MAAM,KAAK,GAAG,EAAE;QAC3B,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;QAClCZ,QAAQ,CAAC;UACPa,IAAI,EAAE,OAAO;UACbC,OAAO,EAAE;YACPC,KAAK,EAAEJ,IAAI,CAACN,IAAI,CAACU;UACnB;QACF,CAAC,CAAC;MACJ,CAAC,MAAM;QACL;QACAf,QAAQ,CAAC;UACPa,IAAI,EAAE,YAAY;UAClBC,OAAO,EAAE;YACPE,KAAK,EAAE;UACT;QACF,CAAC,CAAC;MACJ;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdR,OAAO,CAACQ,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}