{"ast":null,"code":"// authActions.js\nexport const login = userData => {\n  return async dispatch => {\n    try {\n      console.log('Sending userData:', userData); // Affiche les données envoyées\n\n      const response = await fetch('http://localhost:3001/api/v1/user/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      console.log('HTTP Response:', response.status); // Affiche le statut de la réponse HTTP\n\n      if (response.status === 200) {\n        const data = await response.json();\n        console.log('Response data:', data); // Affiche les données de la réponse\n\n        dispatch({\n          type: 'LOGIN',\n          payload: {\n            token: data.body.token\n          }\n        });\n      } else {\n        const errorData = await response.json(); // Récupère les détails de l'erreur\n        console.log('Error Response:', errorData); // Affiche les détails de l'erreur\n\n        dispatch({\n          type: 'AUTH_ERROR',\n          payload: {\n            error: 'Email ou mot de passe non valides'\n          }\n        });\n      }\n    } catch (error) {\n      console.error('Login error:', error); // Affiche les erreurs de fetch\n      dispatch({\n        type: 'AUTH_ERROR',\n        payload: {\n          error: 'Erreur de connexion'\n        }\n      });\n    }\n  };\n};","map":{"version":3,"names":["login","userData","dispatch","console","log","response","fetch","method","headers","body","JSON","stringify","status","data","json","type","payload","token","errorData","error"],"sources":["C:/Users/stevi/Desktop/OPENCLASSROOMS/PROJETS/Projet11/ArgentBank/Front/src/redux/actions/login.js"],"sourcesContent":["// authActions.js\r\nexport const login = (userData) => {\r\n    return async (dispatch) => { \r\n      try {\r\n        console.log('Sending userData:', userData); // Affiche les données envoyées\r\n\r\n        const response = await fetch('http://localhost:3001/api/v1/user/login', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(userData)\r\n        });\r\n\r\n        console.log('HTTP Response:', response.status);  // Affiche le statut de la réponse HTTP\r\n\r\n        if (response.status === 200) {\r\n          const data = await response.json();\r\n          console.log('Response data:', data); // Affiche les données de la réponse\r\n          \r\n          dispatch({\r\n            type: 'LOGIN',\r\n            payload: {\r\n              token: data.body.token,\r\n            }\r\n          });\r\n        } else {\r\n          const errorData = await response.json(); // Récupère les détails de l'erreur\r\n          console.log('Error Response:', errorData); // Affiche les détails de l'erreur\r\n\r\n          dispatch({\r\n            type: 'AUTH_ERROR',\r\n            payload: {\r\n              error: 'Email ou mot de passe non valides',\r\n            }\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error('Login error:', error); // Affiche les erreurs de fetch\r\n        dispatch({\r\n          type: 'AUTH_ERROR',\r\n          payload: {\r\n            error: 'Erreur de connexion',\r\n          }\r\n        });\r\n      }\r\n    };\r\n};\r\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,KAAK,GAAIC,QAAQ,IAAK;EAC/B,OAAO,MAAOC,QAAQ,IAAK;IACzB,IAAI;MACFC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,QAAQ,CAAC,CAAC,CAAC;;MAE5C,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;QACtEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,QAAQ;MAC/B,CAAC,CAAC;MAEFE,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEC,QAAQ,CAACO,MAAM,CAAC,CAAC,CAAE;;MAEjD,IAAIP,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAE;QAC3B,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QAClCX,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAES,IAAI,CAAC,CAAC,CAAC;;QAErCX,QAAQ,CAAC;UACPa,IAAI,EAAE,OAAO;UACbC,OAAO,EAAE;YACPC,KAAK,EAAEJ,IAAI,CAACJ,IAAI,CAACQ;UACnB;QACF,CAAC,CAAC;MACJ,CAAC,MAAM;QACL,MAAMC,SAAS,GAAG,MAAMb,QAAQ,CAACS,IAAI,CAAC,CAAC,CAAC,CAAC;QACzCX,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEc,SAAS,CAAC,CAAC,CAAC;;QAE3ChB,QAAQ,CAAC;UACPa,IAAI,EAAE,YAAY;UAClBC,OAAO,EAAE;YACPG,KAAK,EAAE;UACT;QACF,CAAC,CAAC;MACJ;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdhB,OAAO,CAACgB,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC,CAAC,CAAC;MACtCjB,QAAQ,CAAC;QACPa,IAAI,EAAE,YAAY;QAClBC,OAAO,EAAE;UACPG,KAAK,EAAE;QACT;MACF,CAAC,CAAC;IACJ;EACF,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}